#!/bin/bash

   share_psp=faaa
   share_script=fbbb
   cluster=fccc
   job_name=fggg

   cid_start=1
   cid_end=100
   psp_name='Pb.S.I.nod.pbe'
   neig_extra=70
   nvb_collect=20
   ncb_collect=20
   nid_per_sub=50

   str1=`pwd`
   str2=`basename $str1`
   sysname=`echo $str2 | cut -d'.' -f 1`
   for (( id=$cid_start; id<=$cid_end; id++ )) ; do
      file="struct-gen/struct-poscar/$sysname.cf-$id.vasp"
      if [[ -e $file ]] ; then
         id_max=$id
      fi
   done
   for (( id=$cid_end; id>=$cid_start; id-- )) ; do
      file="struct-gen/struct-poscar/$sysname.cf-$id.vasp"
      if [[ -e $file ]] ; then
         id_min=$id
      fi
   done
   if [[ $cid_start < $id_min ]] ; then
      cid_start=$id_min
   fi
   if [[ $cid_end > $id_max ]] ; then
      cid_end=$id_max
   fi

   for ((cid=$cid_start; cid<=$cid_end; cid++)) ; do
      folder="cf-$cid"
      if [[ -d $folder ]] ; then
         echo "cf-$cid"
         cd ./$folder
         if [[ -d "en" ]] ; then
            echo "job energy started already."
         else
            file1='./relax/OUTCAR'
            if [[ ! -e $file1 ]] ; then
               echo "job relax waiting."
            else
               line=`tail -n 1 $file1`
               tempstr=`echo $line | cut -d':' -f 1`
               if [[ $tempstr != "Voluntary context switches" ]] ; then
                  echo "job relax running."
               else
                  echo 'job relax finished, move on to eigval calculation.'
                  cp -r ../y-sample/en .
                  cd ./en/
                  cp ../relax/CONTCAR .
                  ln -sf $share_psp/$psp_name.POTCAR ./POTCAR
                  ln -sf $share_script/vtotav_revised_zdir.x .
                  ln -sf $share_script/change_lattice_contcar_to_poscar_v2.x .
                  sed "s/avvv/$nvb_collect/g" extract_eigval_near_ef.sh.template > temp1
                  sed "s/accc/$ncb_collect/g" temp1 > extract_eigval_near_ef.sh
                  rm temp1
                  file2="../../struct-gen/struct-info/$sysname.cf-$cid.info.dat"
                  flag='number of valence bands without d orbitals:'
                  nvb=`grep -A 1 "$flag" "$file2" | tail -n 1`
                  nband=$(( $nvb + $neig_extra ))
                  sed "s/abbb/$nband/g" INCAR.template > INCAR
                  ./change_lattice_contcar_to_poscar_v2.x
                  cd ../
               fi
            fi
         fi
         cd ../
      fi
   done

   if [[ ! -d "job-submit-files" ]] ; then
      mkdir "job-submit-files"
   fi
   if [[ ! -d "job-status-files" ]] ; then
      mkdir "job-status-files"
   fi
   njob=$(( $cid_end-$cid_start+1 ))
   ngroup=$(( ($njob-1)/$nid_per_sub + 1 ))
   nsubjob=$(( $njob / $ngroup ))
   nremain=$(( $njob % ngroup ))
   echo "Number of submission = $ngroup "
   sub_id_end=$(($cid_start-1))
   for (( i=1; i<=$ngroup; i++ )) ; do
      sub_id_start=$(($sub_id_end + 1 ))
      if [[ i -le $nremain ]]; then
         sub_id_end=$(( $sub_id_start + $nsubjob ))
      else
         sub_id_end=$(( $sub_id_start + $nsubjob -1 ))
      fi
      echo "Submission $i ranges from $sub_id_start to $sub_id_end"
      sed "s/saaa/$job_name.g$i/g" ./y-sample/qd_trap_screen_vasp_job_multi2.$cluster.pbs.template > temp1
      sed "s/sbbb/$sub_id_start-$sub_id_end/g" temp1 > temp2
      sed "s/sccc/$sub_id_start/g" temp2 > temp3
      sed "s/sddd/$sub_id_end/g" temp3 > ./job-submit-files/sub_vasp_multi.step2.$sub_id_start-$sub_id_end.pbs
      rm temp1 temp2 temp3 
      sbatch ./job-submit-files/sub_vasp_multi.step2.$sub_id_start-$sub_id_end.pbs
   done


